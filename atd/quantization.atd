type signal = {
     signal : string
}
type signalv2 = {
     name : string;
     update : string;
}
type signalv3 = {
     name: string;
     value: abstract
}
type float_value = {
     value : float
}
type string_value = {
     value : string
}
type x = {
     scale : string;
     field : string
}
type y = {
     signal : string;
     mult : float
}
type update = {
     ?width : signal option;
     ?height : signal option;
     ?opacity: float_value option;
     ?fill: signal option;
     ?aria_role_description <json name="ariaRoleDescription"> : string_value option;
     ?x: x option;
     ?y: y option;
     ?tooltip: signal list option;
}

type encode = {
     update : update
}
type data_ref = {
     data : string
}
type axis = {
     scale : string;
     orient : string;
     grid : bool;
     tick_count <json name = "tickCount"> : signal;
     ?domain : bool option;
     ?labels : bool option;
     ?aria : bool option;
     ?max_extent <json name = "maxExtent"> : int option;
     ?min_extent <json name = "minExtent"> : int option;
     ?ticks : bool option;
     zindex : int;
     ?label_flush <json name = "labelFlush"> : bool option;
     ?label_overlap <json name = "labelOverlap">: bool option;
     ?title : string option
}
type layout = {
     padding : int;
     columns : int;
     ?bounds : string option;
     ?align : string option
}

type data_values = {
     name : string;
     values : abstract list
}
type marks = {
     type_ <json name="type"> : string;
     name : string;
     style : string;
     ?from : data_ref option;
     ?encode : encode option;
     ?signals : abstract list option;
     ?marks : marks list option;
     ?axes: axis list option;
     ?layout : layout option;
     ?data : data_values list option;
     ?scales : scale list option
}
type domain = {
     data : string;
     field : string
}

type scale = {
     name : string;
     type_ <json name="type"> : string;
     domain : domain;
     range : abstract list;
     nice: bool;
     zero: bool
}
type recipe = {
     schema <json name = "$schema"> : string;
     background : string;
     ?data : data_values list option;
     ?signals : abstract list option;
     layout : layout;
     marks : marks list;
     ?scales : scale list option
}